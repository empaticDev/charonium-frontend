@use '../mixins/mixins-colors';
@use 'sass:map';

:root,
[data-theme='default'] {
	//contrast

	$colorsContrast: (
		50: #171717,
		100: #262626,
		200: #404040,
		300: #525252,
		400: #737373,
		500: #a3a3a3,
		600: #d4d4d4,
		700: #e5e5e5,
		800: #f5f5f5,
		900: #fafafa,
	) !default;

	//brand

	$colorsBrand: (
		200: #3b82f6,
		300: #2563eb,
		'default': #1d4ed8,
		500: #1e40af,
		600: #1e3a8a,
	) !default;

	//default Colors

	$bg: map.get($colorsContrast, 50) !default;

	$bg-white: map.get($colorsContrast, 900) !default;

	$bg-muted: map.get($colorsContrast, 200) !default;

	$bg-inverted: map.get($colorsContrast, 900) !default;

	$bg-brand: map.get($colorsBrand, 'default') !default;

	$text-base: map.get($colorsContrast, 900) !default;

	$text-muted: map.get($colorsContrast, 500) !default;

	$text-inverted: map.get($colorsContrast, 50) !default;

	$text-brand: map.get($colorsBrand, 'default') !default;

	@include mixins-colors.defineColorHSL(
		--clr-bg,
		round(hue($bg)),
		round(saturation($bg)),
		round(lightness($bg))
	);
	@include mixins-colors.defineColorHSL(
		--clr-bg-white,
		round(hue($bg-white)),
		round(saturation($bg-white)),
		round(lightness($bg-white))
	);
	@include mixins-colors.defineColorHSL(
		--clr-bg-muted,
		round(hue($bg-muted)),
		round(saturation($bg-muted)),
		round(lightness($bg-muted))
	);
	@include mixins-colors.defineColorHSL(
		--clr-bg-inverted,
		round(hue($bg-inverted)),
		round(saturation($bg-inverted)),
		round(lightness($bg-inverted))
	);
	@include mixins-colors.defineColorHSL(
		--clr-bg-brand,
		round(hue($bg-brand)),
		round(saturation($bg-brand)),
		round(lightness($bg-brand))
	);
	@include mixins-colors.defineColorHSL(
		--clr-text-base,
		round(hue($text-base)),
		round(saturation($text-base)),
		round(lightness($text-base))
	);
	@include mixins-colors.defineColorHSL(
		--clr-text-muted,
		round(hue($text-muted)),
		round(saturation($text-muted)),
		round(lightness($text-muted))
	);
	@include mixins-colors.defineColorHSL(
		--clr-text-inverted,
		round(hue($text-inverted)),
		round(saturation($text-inverted)),
		round(lightness($text-inverted))
	);
	@include mixins-colors.defineColorHSL(
		--clr-text-brand,
		round(hue($text-brand)),
		round(saturation($text-brand)),
		round(lightness($text-brand))
	);

	@each $name, $hex in $colorsContrast {
		@include mixins-colors.defineColorHSL(
			--clr-contrast-#{$name},
			round(hue($hex)),
			round(saturation($hex)),
			round(lightness($hex))
		);
	}

	@each $name, $hex in $colorsBrand {
		@include mixins-colors.defineColorHSL(
			--clr-brand-#{$name},
			round(hue($hex)),
			round(saturation($hex)),
			round(lightness($hex))
		);
	}
}
